version: '3'
services:
  django:
    build:
      context: .
      dockerfile: ./dev/django.Dockerfile
    command: ["./manage.py", "runserver", "0.0.0.0:8000"]
    env_file: ./dev/.env.docker-compose
    volumes:
      - .:/opt/django
    ports:
      - 8000:8000
    depends_on:
      - postgres
      - rabbitmq
      - minio
      - girder

  celery:
    build:
      context: .
      dockerfile: ./dev/django.Dockerfile
    command: [
      "celery", "worker",
      "--app", "dandi.celery",
      "--loglevel", "info",
      "--without-heartbeat"
    ]
    env_file: ./dev/.env.docker-compose
    volumes:
      - .:/opt/django
    depends_on:
      - postgres
      - rabbitmq
      - minio

  mongo:
    image: mongo:latest
    volumes:
      - dandi_girder_mongo_db:/data/db

  girder:
    build:
      context: .
      dockerfile: dev/dandiarchive/girder.Dockerfile
    image: dandi_girder
    volumes:
      - dandi_girder_assetstore:/home/assetstore
    depends_on:
      - mongo
    ports:
      - "8091:8080"

  client:
    build:
      context: .
      dockerfile: dev/dandiarchive/client.Dockerfile
    image: dandi_client
    depends_on:
      - girder
    ports:
      - "8092:80"

  provision:
    build:
      context: .
      dockerfile: dev/dandiarchive/provision.Dockerfile
    image: dandi_provision
    depends_on:
      - client

volumes:
  dandi_girder_mongo_db:
  dandi_girder_assetstore:
